{"version":3,"sources":["clean.js"],"names":["budget","Object","freeze","value","description","user","spendingLimits","jonas","matilda","getLimit","limits","addExpense","state","cleanUser","toLowerCase","newBudget1","newBudget2","newBudget3","checkExpenses","map","entry","flag","finalBudget","console","log","logBigExpenses","bigLimit","bigExpenses","filter","slice","join"],"mappings":"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","file":"clean.55562fe9.js","sourceRoot":"..","sourcesContent":["'use strict';\n\nconst budget = Object.freeze([\n  { value: 250, description: 'Sold old TV 📺', user: 'jonas' },\n  { value: -45, description: 'Groceries 🥑', user: 'jonas' },\n  { value: 3500, description: 'Monthly salary 👩‍💻', user: 'jonas' },\n  { value: 300, description: 'Freelancing 👩‍💻', user: 'jonas' },\n  { value: -1100, description: 'New iPhone 📱', user: 'jonas' },\n  { value: -20, description: 'Candy 🍭', user: 'matilda' },\n  { value: -125, description: 'Toys 🚂', user: 'matilda' },\n  { value: -1800, description: 'New Laptop 💻', user: 'jonas' },\n]);\n\nconst spendingLimits = Object.freeze({\n  jonas: 1500,\n  matilda: 100,\n});\n// spendingLimits.jay = 200;\n\n// const limit = spendingLimits[user] ? spendingLimits[user] : 0;\nconst getLimit = (limits, user) => limits?.[user] ?? 0;\n\n// Pure function :D\nconst addExpense = function (\n  state,\n  limits,\n  value,\n  description,\n  user = 'jonas'\n) {\n  const cleanUser = user.toLowerCase();\n\n  return value <= getLimit(limits, cleanUser)\n    ? [...state, { value: -value, description, user: cleanUser }]\n    : state;\n};\n\nconst newBudget1 = addExpense(budget, spendingLimits, 10, 'Pizza 🍕');\nconst newBudget2 = addExpense(\n  newBudget1,\n  spendingLimits,\n  100,\n  'Going to movies 🍿',\n  'Matilda'\n);\nconst newBudget3 = addExpense(newBudget2, spendingLimits, 200, 'Stuff', 'Jay');\n\n// const checkExpenses2 = function (state, limits) {\n//   return state.map(entry => {\n//     return entry.value < -getLimit(limits, entry.user)\n//       ? { ...entry, flag: 'limit' }\n//       : entry;\n//   });\n//   // for (const entry of newBudget3)\n//   //   if (entry.value < -getLimit(limits, entry.user)) entry.flag = 'limit';\n// };\n\nconst checkExpenses = (state, limits) =>\n  state.map(entry =>\n    entry.value < -getLimit(limits, entry.user)\n      ? { ...entry, flag: 'limit' }\n      : entry\n  );\n\nconst finalBudget = checkExpenses(newBudget3, spendingLimits);\nconsole.log(finalBudget);\n\n// Impure\nconst logBigExpenses = function (state, bigLimit) {\n  const bigExpenses = state\n    .filter(entry => entry.value <= -bigLimit)\n    .map(entry => entry.description.slice(-2))\n    .join(' / ');\n  // .reduce((str, cur) => `${str} / ${cur.description.slice(-2)}`, '');\n\n  console.log(bigExpenses);\n\n  // let output = '';\n  // for (const entry of budget)\n  //   output +=\n  //     entry.value <= -bigLimit ? `${entry.description.slice(-2)} / ` : '';\n  // output = output.slice(0, -2); // Remove last '/ '\n  // console.log(output);\n};\n\nlogBigExpenses(finalBudget, 500);\n"]}